name: PROD Deploy Workflow

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ASPNETCORE_ENVIRONMENT: prod
      CRDS_STYLES_AWS_ACCESS_KEY: ${{ secrets.CRDS_STYLES_AWS_ACCESS_KEY }}
      CRDS_STYLES_AWS_SECRET_KEY: ${{ secrets.CRDS_STYLES_AWS_SECRET_KEY }}
      CRDS_STYLES_S3_BUCKET: ${{ secrets.CRDS_STYLES_S3_BUCKET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: ".nvmrc"

      - name: Restore dependencies
        run: npm i

      - run: git config user.email "crdsTeamCity@crossroads.net"
      - run: git config user.name "crdsTeamCity"
      - run: git remote rm origin
      - run: git remote add origin https://${{ secrets.GHA_ACCESS_TOKEN }}:x-oauth-basic@github.com/${{ github.REPOSITORY}}.git

      - run: npm run prepare-release

      - name: "Automated Version Bump"
        uses: "phips28/gh-action-bump-version@master"
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          tag-prefix: "v"

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: create env file
        run: |
          touch .env
          echo ENGINE_API_KEY=${{ secrets.ENGINE_API_KEY }} >> .env
          echo CRDS_STYLES_AWS_ACCESS_KEY=${{ secrets.CRDS_STYLES_AWS_ACCESS_KEY }} >> .env
          echo CRDS_STYLES_AWS_SECRET_KEY=${{ secrets.CRDS_STYLES_AWS_SECRET_KEY }} >> .env
          echo CRDS_STYLES_S3_BUCKET=${{ secrets.CRDS_STYLES_S3_BUCKET }} >> .env

      - run: npm pack
      - run: npm run deploy

      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - run: npm i npm@latest
      - run: npm publish crds-styles-${{ steps.package-version.outputs.current-version}}.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.current-version}}
          release_name: v${{ steps.package-version.outputs.current-version}}
          body: |
            ${{ github.event.commits[0].message }}
          draft: false
          prerelease: false
